---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    name: Create Release

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@ccf2c627fe61b1b4d924adfcbd19d661a18133a0 # 2.35.2
        with:
          php-version: "8.2"
          extensions: mbstring, xml, ctype, iconv, intl, json
          tools: composer:v2

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --no-dev --optimize-autoloader

      - name: Run tests
        run: composer test

      - name: Run linting
        run: composer lint

      - name: Get tag name
        id: tag
        run: echo "name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Extract changelog for this version
        id: changelog
        run: |
          # Extract changelog section for this version
          if [ -f CHANGELOG.md ]; then
            # Get content between this version and next version header
            awk '/^## \[${{ steps.tag.outputs.name }}\]/{flag=1; next} /^## \[/{flag=0} flag' CHANGELOG.md > /tmp/changelog.txt
            if [ -s /tmp/changelog.txt ]; then
              echo "content<<EOF" >> $GITHUB_OUTPUT
              cat /tmp/changelog.txt >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
            else
              echo "content=Release ${{ steps.tag.outputs.name }}" >> $GITHUB_OUTPUT
            fi
          else
            echo "content=Release ${{ steps.tag.outputs.name }}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # v1.1.4
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.name }}
          release_name: ${{ steps.tag.outputs.name }}
          body: ${{ steps.changelog.outputs.content }}
          draft: false
          prerelease: ${{ contains(steps.tag.outputs.name, '-') }}

      - name: Archive source code
        run: |
          mkdir -p release
          composer archive --format=zip --dir=release --file=monolog-gdpr-filter-${{ steps.tag.outputs.name }}

      - name: Upload release asset
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/monolog-gdpr-filter-${{ steps.tag.outputs.name }}.zip
          asset_name: monolog-gdpr-filter-${{ steps.tag.outputs.name }}.zip
          asset_content_type: application/zip
